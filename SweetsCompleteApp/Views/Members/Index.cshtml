@using PagedList.Mvc;
@using PagedList;
@model IPagedList<SweetsCompleteApp.member>
@{
    ViewBag.Title = "Members";
    
}

<style>
    /*.capitalizedText {
        text-transform: capitalize;
    }*/
</style>

<h2>Members</h2>
    <h3>search by name, address, city, state or country</h3>
<form method="GET" class="form-search">
    <div class="input-append">
        <input type="text" class="span2 search-query capitalizedText" id="que" name="query">
        <button type="submit" class="btn">Search</button>
    </div>
</form>
<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Address
        </th>
        <th>
            City
        </th>
        <th>
            State/Province
        </th>
        <th>
            Country
        </th>
        <th>
            Phone Number
        </th>
        <th>
            Account Balance
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @{
           /*string newParam =  Request.Params["query"] ?? "0";
            if(newParam == "0")
            {*/
                    <td>
                        @Html.DisplayFor(modelItem => item.name)

                    <td>
                        @Html.DisplayFor(modelItem => item.address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.city)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.state_province)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.balance)
                    </td>
                    </td>
            /*}
            else
            {
                char[] newP = newParam.ToCharArray();
                newParam = newP[0].ToString().ToUpper() + newParam.Substring(1);
                if((item.name) != null|| (item.address) != null || (item.city) != null || (item.state_province) != null || (item.country) != null)
                {
                    if ((item.name).Contains(@newParam) || (item.address).Contains(@newParam) || (item.city).Contains(@newParam) || (item.state_province).Contains(@newParam) || (item.country).Contains(@newParam))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.name)

                        <td>
                            @Html.DisplayFor(modelItem => item.address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.city)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.state_province)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.balance)
                        </td>
                        </td>
                    }
                }
            }*/
        }
    </tr>
}

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))